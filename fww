#!/bin/sh
set -e
# this script may run on Windows in the Cosmopolitan shell, but this is **untested**
if [ "$#" = "0" ]; then
	CMD="help"
else
	CMD="$1"
	shift
fi

. ./setup.sh

fused_clean() {
	set -e
	rm -f funcWebWiki.com funcWebWiki-rx.com
}

kernel_clean() {
	set -e
	rm -f funcWebWiki-kernel.com funcWebWiki-rx-kernel.com
	fused_clean
}

kernel_build() {
	set -e
	kernel_clean
	# make kernel build
	cp thirdparty/redbean-3.0.0.com funcWebWiki-kernel.com
	cd kernel
	zip --quiet -r ../funcWebWiki-kernel.com .
	cd ..
	zip --quiet -r ../funcWebWiki-kernel.com thirdparty/licenses thirdparty/redbean-3.0.0-licenses.txt
	# redbean-3.0.0 doesn't support -*
	cp thirdparty/redbean-2.2.com funcWebWiki-rx-kernel.com
	cd kernel
	zip --quiet -r ../funcWebWiki-rx-kernel.com .
	cd ..
	zip --quiet -r ../funcWebWiki-rx-kernel.com thirdparty/licenses thirdparty/redbean-3.0.0-licenses.txt
}

wiki_clean() {
	set -e
	rm -f wiki/chaff_*
	rm -rf wiki/system/cache unpack-dir static-dir static.tar
	fused_clean
}

wiki_build() {
	set -e
	wiki_clean
	# build wiki
	$REDBEAN -D kernel -- --trigger updateSystemHashes --trigger flushCaches --trigger errorSweep --trigger buildCaches
	# build static
	$REDBEAN -D kernel -- --trigger genSiteTar > static.tar
	# create embedded wiki coms
	cp funcWebWiki-kernel.com funcWebWiki.com
	zip --quiet -r funcWebWiki.com wiki
	cp funcWebWiki-rx-kernel.com funcWebWiki-rx.com
	zip --quiet -r funcWebWiki-rx.com wiki
	# extract static
	rm -rf static-dir
	mkdir -p static-dir
	cd static-dir
	tar -xf ../static.tar
	cd ..
}

clean() {
	set -e
	kernel_clean
	wiki_clean
}

build() {
	set -e
	kernel_build
	wiki_build
}

if [ "$CMD" = "help" ]; then
	echo "-- funcWebWiki developer build system --"
	echo "REDBEAN = $REDBEAN"
	echo "commands: help, build, run, run-prefix, run-ro, run-rx, run-tests, run-unsandboxed"
elif [ "$CMD" = "clean" ]; then
	clean
elif [ "$CMD" = "build" ]; then
	build
elif [ "$CMD" = "run" ]; then
	build
	export WIKI_TWM_PASSWORD=test
	ape ./funcWebWiki-kernel.com
elif [ "$CMD" = "run-prefix" ]; then
	build
	ape ./funcWebWiki-kernel.com -- --url-base /test/ --strip-prefix /test/
elif [ "$CMD" = "run-ro" ]; then
	build
	ape ./funcWebWiki.com -- --asset-wiki
elif [ "$CMD" = "run-rx" ]; then
	build
	cp funcWebWiki-rx.com funcWebWiki-scratch.com
	ape ./funcWebWiki-scratch.com -* -- --asset-wiki
elif [ "$CMD" = "run-tests" ]; then
	build
	ape ./funcWebWiki-kernel.com -F tests.lua --
elif [ "$CMD" = "run-unsandboxed" ]; then
	build
	ape ./funcWebWiki-kernel.com -- --unsandboxed-unsafe
else
	echo "unknown command (try help)"
fi
